 UIClass-August-24-2016 HomeWork 8 

1) why we use java script?
JavaScript is very easy to implement. All we need to do is put our code in the HTML document and tell the browser that it is JavaScript.
JavaScript works on web users’ computers — even when they are offline!
JavaScript allows us to create highly responsive interfaces that improve the user experience and provide dynamic functionality, without having to wait for the server to react and show another page.
JavaScript can load content into the document if and when the user needs it, without reloading the entire page — this is commonly referred to as Ajax.
JavaScript can test for what is possible in our browser and react accordingly — this is called Principles of unobtrusive JavaScript or sometimes defensive scripting.
JavaScript can help fix browser problems or patch holes in browser support — for example fixing CSS layout issues in certain browsers. 
The main purpose of JavaScript is to make things happen in the user browser itself without sending to the server.
We can validate field by field rather than waiting until user has completely filled out the screen and click the submit button.
Javascript adds behaviour to the web page where it is capable of responding to actions by your visitors without needing to load a new page.
Javascript code is less and it works more.
JavaScript saves time,we need not code all the pages in html we can reuse the html and Dhtml code by writing javaScript code.


--------------------------------------------------
2) what is dom manipulation?
DOM: DOM is a document Object Model is a programming interface for HTML and XML documents.
Dom manipulations change the attributes of an element,sets elements style properties, modifies entire elements, these all refers to as setters as they change the values of properties.
The HTML DOM is a standard for how to get, change, add, or delete HTML elements.
HTML DOM is a standard object model and programming interface for HTML. 
It defines:
    The HTML elements as objects
    The properties of all HTML elements
    The methods to access all HTML elements
    The events for all HTML elements

--------------------------------------------------
3) what are events in a web page? how can you recognize them
HTML 4 added the ability to let events trigger actions in a browser, 
like starting a JavaScript when a user clicks on an element

There are many events present in javascripts
few of them are:
onsubmit:
this event triggers when a form is submitted.
onchange:
to change the html element we use onchange event.

onclick
to perform some operation,when a user clicks the particular html element.

onmouseover
to perform some action when a user moves over an html element.

onmouseout
to perform some action when a user moves away from an html elemnent.

onkeydown
to perform an action when a keyboard key is pressed.

onload
this event triggers when document is loaded.

onblur:
this event triggers when window loses focus.

oncontextmenu:
this is event triggers when user calls the context menu by right clicking.

onselect:
this event triggers when an element is selected.

onsuspend:
this event is triggered when the browser fetching media data but stopped before it is completely loaded into the browser.

onscroll:
this event is triggered when scrollbar is being sscrolled in a page.

onresize:
this event triggers when window is resized.

onfocus:
this event triggers when window is focused.

onstorage:
this event triggers when a document loads

--------------------------------------------------
4) java script data types.
There are 2 different datatypes exists in javascript:
1.primitive datatypes
2.Non primitive datatypes

1.primitive data types
Boolean
 Boolean represents values either true or false.

Undefined
 Undefined represents undefined value.

Number
 Number represents numerical values.

String:
 String represents sequence of character elements

Null
 represents NUll value.

Non-primitive data types:
Object:
 represents an instance through which we can access members.
Array:
 Array represents group of homogenous elements.

function
 return a value when it is called by any element.
-----------------
Null type
The Null type has exactly one value: null. 

Undefined type
A variable that has not been assigned a value has the value undefined.
Example
var emp = null;           // Value is null, but type is still an object

You can also empty an object by setting it to undefined:
Example
var emp= undefined;     // Value is undefined, type is undefined

--------------------------------------------------
5) conditions and loops

if else:
it allows a code to print a statement if given conditions is true, and if condition is false then it prints else statement
if(condition) {
	console.log('The conditon is true')
} else {
	console.log('The conditon is false')
}
----------------------------------------------------------------------
while: Statements inside the while bock will be executed repeatedly until the given conditions becomes false.
while(condition) {
	//stmts;
}

statements will be constinuosly executed when condition is true.
it will terminate the loop if condition id false.

var i=0;
while(i<10) {
	console.log(i);
	i++;
}
----------------------------------------------------------------------

for: statements  inside for loop will be executed  repeatedly until the given conditions becomes false.
for(intialization i=1; condition i< 8 ..; increment/decrement i++/i--- ..) {
	//stmts; 
}

syntax: for(exp;condition;inc/dec)
{
	statement
}

--------------------------------------------------------------------

DO-WHILE LOOP :
Same as while loop , Statements inside the do while bock will be executed repeatedly until the given conditions becomes false.
Atleast once statement will be executed.
syntax : do
         {
	        statement
          }            
            while(condition)



--------------------------------------------------------------------

SWITCH CASE
The switch expression is evaluated once.
The value of the expression is compared with the values of each case.
If there is a match, the associated block of code is executed.
Otherwise default  code block will be executed.
  
    switch(expression) {
    case n:
        code block
        break;
    case m:
        code block
        break;
    default:
        default code block
}


References:
http://javascript.about.com/od/reference/a/javascriptpurpose.htm
https://davidwalsh.name/6-reasons-to-use-javascript-libraries-frameworks
https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction
https://api.jquery.com/category/manipulation/